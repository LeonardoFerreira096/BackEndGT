{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "API node.js com Express",
    "description": "Uma API de exemplo documentada com Swagger"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "documentacao"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/v1/cart/{id}/itens": {
      "get": {
        "tags": [
          "carrinho"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "carrinho"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/cart/": {
      "post": {
        "tags": [
          "carrinho"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/item/": {
      "post": {
        "tags": [
          "Carrinho-Item"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cart_id": {
                    "example": "any"
                  },
                  "product_id": {
                    "example": "any"
                  },
                  "quantity": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/item/{id}": {
      "put": {
        "tags": [
          "Carrinho-Item"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Carrinho-Item"
        ],
        "summary": "Redireciona para documentacao API",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/user/register": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Registro de novo usuario",
        "description": "Criar um novo usuario no sistema com nome, sobrenome, email e senha válidos",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "example": "any"
                  },
                  "surname": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/login": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Login de usuario",
        "description": "Autentica um usuário com email e senha. Retorna um Token JWT que deve ser usada para acessar rotas protegidas",
        "responses": {
          "200": {
            "description": "Login efetuado com sucesso"
          },
          "401": {
            "description": "Não atutorizado. Token de Acesso ausente"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "someBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "age": {
            "type": "number",
            "example": 29
          },
          "about": {
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "name",
          "age"
        ]
      },
      "someResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "age": {
            "type": "number",
            "example": 29
          },
          "diplomas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "school": {
                  "type": "string",
                  "example": "XYZ University"
                },
                "year": {
                  "type": "number",
                  "example": 2020
                },
                "completed": {
                  "type": "boolean",
                  "example": true
                },
                "internship": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "number",
                      "example": 290
                    },
                    "location": {
                      "type": "string",
                      "example": "XYZ Company"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "someEnum": {
        "type": "string",
        "enum": [
          "red",
          "yellow",
          "green"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}